define(["require","exports","./toc.module","./forms.module","jquery"],function(o,e,n,i,r){"use strict";r(document).ready(function(){if(0!=r("form").length&&(i.formStyles(),i.formSubmit()),0!=r(".writing").length){var o=new n.TOC;o.buildTOC(),r(window).on("scroll",function(){var e=r(window).scrollTop();e>50?o.repositionTOC("up"):o.repositionTOC("down")})}0!=r(".home-header").length&&setTimeout(function(){console.log("running"),r(".home-header a").toggleClass("is-orange")},200)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMudHMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJsZW5ndGgiLCJmb3Jtc19tb2R1bGVfMSIsImZvcm1TdHlsZXMiLCJmb3JtU3VibWl0IiwidG9jXzEiLCJ0b2NfbW9kdWxlXzEiLCJUT0MiLCJidWlsZFRPQyIsIndpbmRvdyIsIm9uIiwic2Nyb2xsIiwic2Nyb2xsVG9wIiwicmVwb3NpdGlvblRPQyIsInNldFRpbWVvdXQiLCJjb25zb2xlIiwibG9nIiwidG9nZ2xlQ2xhc3MiXSwibWFwcGluZ3MiOiJzR0FJQUEsR0FBRUMsVUFBVUMsTUFBTyxXQU9mLEdBTHdCLEdBQXBCRixFQUFFLFFBQVFHLFNBQ1ZDLEVBQUFDLGFBQ0FELEVBQUFFLGNBR3dCLEdBQXhCTixFQUFFLFlBQVlHLE9BQVksQ0FDMUIsR0FBSUksR0FBWSxHQUFJQyxHQUFBQyxHQUNwQkYsR0FBSUcsV0FFSlYsRUFBRVcsUUFBUUMsR0FBSSxTQUFVLFdBQ3BCLEdBQUlDLEdBQVNiLEVBQUVXLFFBQVFHLFdBQ25CRCxHQUFTLEdBQ1ROLEVBQUlRLGNBQWMsTUFFbEJSLEVBQUlRLGNBQWMsVUFLRSxHQUE1QmYsRUFBRSxnQkFBZ0JHLFFBRWxCYSxXQUFZLFdBQ1JDLFFBQVFDLElBQUssV0FDYmxCLEVBQUUsa0JBQWtCbUIsWUFBWSxjQUNqQyIsImZpbGUiOiJzY3JpcHRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVE9DIH0gZnJvbSAnLi90b2MubW9kdWxlJztcbmltcG9ydCB7IGZvcm1TdHlsZXMsIGZvcm1TdWJtaXQgfSBmcm9tICcuL2Zvcm1zLm1vZHVsZSc7XG5pbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbiQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbigpe1xuXG4gICAgaWYoICQoJ2Zvcm0nKS5sZW5ndGggIT0gMCApe1xuICAgICAgICBmb3JtU3R5bGVzKCk7XG4gICAgICAgIGZvcm1TdWJtaXQoKTtcbiAgICB9XG5cbiAgICBpZiggJCgnLndyaXRpbmcnKS5sZW5ndGggIT0gMCl7XG4gICAgICAgIGxldCB0b2MgOiBUT0MgPSBuZXcgVE9DO1xuICAgICAgICB0b2MuYnVpbGRUT0MoKTtcblxuICAgICAgICAkKHdpbmRvdykub24oICdzY3JvbGwnLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgdmFyIHNjcm9sbCA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcbiAgICAgICAgICAgIGlmKCBzY3JvbGwgPiA1MCApe1xuICAgICAgICAgICAgICAgIHRvYy5yZXBvc2l0aW9uVE9DKCd1cCcpO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgdG9jLnJlcG9zaXRpb25UT0MoJ2Rvd24nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYoICQoJy5ob21lLWhlYWRlcicpLmxlbmd0aCAhPSAwICl7XG4gICAgICAgIFxuICAgICAgICBzZXRUaW1lb3V0KCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coICdydW5uaW5nJyk7XG4gICAgICAgICAgICAkKCcuaG9tZS1oZWFkZXIgYScpLnRvZ2dsZUNsYXNzKCdpcy1vcmFuZ2UnKTtcbiAgICAgICAgfSwgMjAwKTtcblxuICAgICAgICBcblxuICAgICAgICAgICAvKiBsZXQgZGVsYXkgPSAwO1xuXG4gICAgICAgICAgICAgJCgnLmhvbWUtaGVhZGVyIC5za2lsbHMgbGknKS5lYWNoKCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICBsZXQgdG9wID0gTWF0aC5mbG9vcigoTWF0aC5yYW5kb20oKSAqICg4NS0xNSArIDEpKSArIDE1KTtcbiAgICAgICAgICAgICAgICAgbGV0IGxlZnQgPSBNYXRoLmZsb29yKChNYXRoLnJhbmRvbSgpICogKDg1LTE1ICsgMSkpICsgMTUpO1xuICAgICAgICAgICAgICAgICBsZXQgb3BhY2l0eSA9IE1hdGguZmxvb3IoKE1hdGgucmFuZG9tKCkgKiAoMyAtIDEgKyAxKSkgKyAxKTtcbiAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgJCh0aGlzKS5kZWxheShkZWxheSkuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAnb3BhY2l0eSc6IG9wYWNpdHkvMTBcbiAgICAgICAgICAgICAgICAgfSkuZGVsYXkoMzUwMCkuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAnb3BhY2l0eSc6IDBcbiAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICQodGhpcykuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICd0b3AnOiB0b3ArJyUnLFxuICAgICAgICAgICAgICAgICAgICAgJ2xlZnQnOiBsZWZ0KyclJyxcbiAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgIGRlbGF5ICs9IDEwMDA7XG4gICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgIH0pOyovXG5cblxuXG4gICAgICAgXG4gICAgfVxuXG59KTsiXX0=
