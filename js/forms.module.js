define(["require","exports"],function(t,o){"use strict";function e(t){t.css("color","#aaa").val("Write your message here...")}function n(t){t.val("").css("color","#111")}function a(){$("textarea").on("focus",function(){n($(this))}).on("focusout",function(){""==$(this).val()&&e($(this))})}o.__esModule=!0,o.formStyles=a,o.formSubmit=function(){$('#contact-form [type="submit"]').on("click",function(t){t.preventDefault();var o={};$("form input, form textarea").each(function(){var t=$(this).attr("name"),e=$(this).val();o[t]=e}),$.ajax({url:"https://formspree.io/jmob1986@gmail.com",method:"POST",data:o,dataType:"json"}).done(function(t){var o=$("form").height(),n=$(".form-content").html();$("form").css("height",o),$(".form-content").animate({opacity:"0"},function(){var t=$(this);$(this).html("<h2>Thanks!</h2><p>I&rsquo;ll get back to you soon.</p>").animate({opacity:"1"}),setTimeout(function(){console.log("timeout"),t.animate({opacity:"0"},function(){$(this).html(n).animate({opacity:"1"}),e($("form textarea")),a()})},5e3)})}).fail(function(){0==$("form .error-msg").length?($("form h2").after('<p class="error-msg" style="display: none;">Sorry, but something went wrong. Please try again.</p>'),$("form .error-msg").fadeIn()):$("form .error-msg").fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250)})})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm1zLm1vZHVsZS50cyJdLCJuYW1lcyI6WyJ0ZXh0YXJlYVJlc3R5bGUiLCJ0ZXh0YXJlYSIsImNzcyIsInZhbCIsInRleHRhcmVhU3R5bGUiLCJmb3JtU3R5bGVzIiwiJCIsIm9uIiwidGhpcyIsImV4cG9ydHMiLCJmb3JtU3VibWl0IiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsIm1lc3NhZ2VEYXRhIiwiZWFjaCIsIm5hbWUiLCJhdHRyIiwidmFsdWUiLCJhamF4IiwidXJsIiwibWV0aG9kIiwiZGF0YSIsImRhdGFUeXBlIiwiZG9uZSIsImZvcm1IZWlnaHQiLCJoZWlnaHQiLCJmb3JtSFRNTCIsImh0bWwiLCJhbmltYXRlIiwib3BhY2l0eSIsImNvbnRlbnQiLCJzZXRUaW1lb3V0IiwiY29uc29sZSIsImxvZyIsImZhaWwiLCJsZW5ndGgiLCJhZnRlciIsImZhZGVJbiIsImZhZGVPdXQiXSwibWFwcGluZ3MiOiJ3REFJQSxTQUFBQSxFQUF5QkMsR0FDckJBLEVBQVNDLElBQUksUUFBUyxRQUFRQyxJQUFJLDhCQUd0QyxTQUFBQyxFQUF1QkgsR0FDbkJBLEVBQVNFLElBQUksSUFBSUQsSUFBSSxRQUFTLFFBR2xDLFNBQUFHLElBQ1FDLEVBQUUsWUFDR0MsR0FBSSxRQUFTLFdBQ1ZILEVBQWVFLEVBQUVFLFNBRXBCRCxHQUFJLFdBQVksV0FDUSxJQUFqQkQsRUFBRUUsTUFBTUwsT0FBZUgsRUFBaUJNLEVBQUVFLHlCQU45REMsRUFBQUosV0FBQUEsRUFVQUksRUFBQUMsV0FBQSxXQUNJSixFQUFFLGlDQUFpQ0MsR0FBRyxRQUFTLFNBQVNJLEdBQ3BEQSxFQUFNQyxpQkFDTixJQUFJQyxLQUNKUCxFQUFFLDZCQUE2QlEsS0FBTSxXQUNqQyxJQUFJQyxFQUFpQlQsRUFBRUUsTUFBTVEsS0FBSyxRQUM5QkMsRUFBaUJYLEVBQUVFLE1BQU1MLE1BQzdCVSxFQUFZRSxHQUFRRSxJQUV4QlgsRUFBRVksTUFDRUMsSUFBSywwQ0FDTEMsT0FBUSxPQUNSQyxLQUFNUixFQUNOUyxTQUFVLFNBQ1hDLEtBQU0sU0FBU0YsR0FDZCxJQUFJRyxFQUFzQmxCLEVBQUUsUUFBUW1CLFNBQ2hDQyxFQUFtQnBCLEVBQUUsaUJBQWlCcUIsT0FDMUNyQixFQUFFLFFBQVFKLElBQUssU0FBVXNCLEdBQ3pCbEIsRUFBRSxpQkFBaUJzQixTQUFVQyxRQUFXLEtBQ3BDLFdBQ0ksSUFBSUMsRUFBVXhCLEVBQUVFLE1BQ2hCRixFQUFFRSxNQUNHbUIsS0FBSywyREFDTEMsU0FBVUMsUUFBVyxNQUMxQkUsV0FBWSxXQUNSQyxRQUFRQyxJQUFJLFdBQ1pILEVBQ0tGLFNBQVVDLFFBQVcsS0FDbEIsV0FDSXZCLEVBQUVFLE1BQ0dtQixLQUFLRCxHQUNMRSxTQUFVQyxRQUFXLE1BQzFCN0IsRUFBZ0JNLEVBQUUsa0JBQ2xCRCxPQUViLFNBR1o2QixLQUFNLFdBQzhCLEdBQS9CNUIsRUFBRSxtQkFBbUI2QixRQUNyQjdCLEVBQUUsV0FDRzhCLE1BQU0sc0dBQ1g5QixFQUFFLG1CQUFtQitCLFVBRXJCL0IsRUFBRSxtQkFDR2dDLFFBQVEsS0FDUkQsT0FBTyxLQUNQQyxRQUFRLEtBQ1JELE9BQU8sS0FDUEMsUUFBUSxLQUNSRCxPQUFPIiwiZmlsZSI6ImZvcm1zLm1vZHVsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBNZXNzYWdlRGF0YSB7XG4gICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xufVxuXG5mdW5jdGlvbiB0ZXh0YXJlYVJlc3R5bGUodGV4dGFyZWE6SlF1ZXJ5KXtcbiAgICB0ZXh0YXJlYS5jc3MoJ2NvbG9yJywgJyNhYWEnKS52YWwoJ1dyaXRlIHlvdXIgbWVzc2FnZSBoZXJlLi4uJyk7XG59XG5cbmZ1bmN0aW9uIHRleHRhcmVhU3R5bGUodGV4dGFyZWE6SlF1ZXJ5KXtcbiAgICB0ZXh0YXJlYS52YWwoJycpLmNzcygnY29sb3InLCAnIzExMScpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9ybVN0eWxlcygpe1xuICAgICAgICAkKCd0ZXh0YXJlYScpXG4gICAgICAgICAgICAub24oICdmb2N1cycsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgdGV4dGFyZWFTdHlsZSggJCh0aGlzKSApXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLm9uKCAnZm9jdXNvdXQnLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIGlmKCAkKHRoaXMpLnZhbCgpID09ICcnICl7IHRleHRhcmVhUmVzdHlsZSggJCh0aGlzKSApOyB9IFxuICAgICAgICAgICAgfSk7XG59ICAgXG4gICAgXG5leHBvcnQgZnVuY3Rpb24gZm9ybVN1Ym1pdCgpe1xuICAgICQoJyNjb250YWN0LWZvcm0gW3R5cGU9XCJzdWJtaXRcIl0nKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCl7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGxldCBtZXNzYWdlRGF0YSA6IE1lc3NhZ2VEYXRhID0ge307XG4gICAgICAgICQoJ2Zvcm0gaW5wdXQsIGZvcm0gdGV4dGFyZWEnKS5lYWNoKCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgbGV0IG5hbWUgIDogc3RyaW5nID0gJCh0aGlzKS5hdHRyKCduYW1lJyk7XG4gICAgICAgICAgICBsZXQgdmFsdWUgOiBzdHJpbmcgPSAkKHRoaXMpLnZhbCgpO1xuICAgICAgICAgICAgbWVzc2FnZURhdGFbbmFtZV0gPSB2YWx1ZTsgXG4gICAgICAgIH0pO1xuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBcImh0dHBzOi8vZm9ybXNwcmVlLmlvL2ptb2IxOTg2QGdtYWlsLmNvbVwiLCBcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhOiBtZXNzYWdlRGF0YSxcbiAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIlxuICAgICAgICB9KS5kb25lKCBmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgIGxldCBmb3JtSGVpZ2h0IDogbnVtYmVyID0gJCgnZm9ybScpLmhlaWdodCgpO1xuICAgICAgICAgICAgbGV0IGZvcm1IVE1MOiBzdHJpbmcgPSAkKCcuZm9ybS1jb250ZW50JykuaHRtbCgpO1xuICAgICAgICAgICAgJCgnZm9ybScpLmNzcyggJ2hlaWdodCcsIGZvcm1IZWlnaHQgKTtcbiAgICAgICAgICAgICQoJy5mb3JtLWNvbnRlbnQnKS5hbmltYXRlKHsgJ29wYWNpdHknOiAnMCcgfSwgXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNvbnRlbnQgPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpXG4gICAgICAgICAgICAgICAgICAgICAgICAuaHRtbCgnPGgyPlRoYW5rcyE8L2gyPjxwPkkmcnNxdW87bGwgZ2V0IGJhY2sgdG8geW91IHNvb24uPC9wPicpXG4gICAgICAgICAgICAgICAgICAgICAgICAuYW5pbWF0ZSh7ICdvcGFjaXR5JzogJzEnIH0pO1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3RpbWVvdXQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYW5pbWF0ZSh7ICdvcGFjaXR5JzogJzAnIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmh0bWwoZm9ybUhUTUwpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmFuaW1hdGUoeyAnb3BhY2l0eSc6ICcxJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRhcmVhUmVzdHlsZSgkKCdmb3JtIHRleHRhcmVhJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybVN0eWxlcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIDUwMDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgIH0pLmZhaWwoIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBpZiggJCgnZm9ybSAuZXJyb3ItbXNnJykubGVuZ3RoID09IDAgKXtcbiAgICAgICAgICAgICAgICAkKCdmb3JtIGgyJylcbiAgICAgICAgICAgICAgICAgICAgLmFmdGVyKCc8cCBjbGFzcz1cImVycm9yLW1zZ1wiIHN0eWxlPVwiZGlzcGxheTogbm9uZTtcIj5Tb3JyeSwgYnV0IHNvbWV0aGluZyB3ZW50IHdyb25nLiBQbGVhc2UgdHJ5IGFnYWluLjwvcD4nKTtcbiAgICAgICAgICAgICAgICAkKCdmb3JtIC5lcnJvci1tc2cnKS5mYWRlSW4oKTtcbiAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICQoJ2Zvcm0gLmVycm9yLW1zZycpXG4gICAgICAgICAgICAgICAgICAgIC5mYWRlT3V0KDI1MClcbiAgICAgICAgICAgICAgICAgICAgLmZhZGVJbigyNTApXG4gICAgICAgICAgICAgICAgICAgIC5mYWRlT3V0KDI1MClcbiAgICAgICAgICAgICAgICAgICAgLmZhZGVJbigyNTApXG4gICAgICAgICAgICAgICAgICAgIC5mYWRlT3V0KDI1MClcbiAgICAgICAgICAgICAgICAgICAgLmZhZGVJbigyNTApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbn0iXX0=
