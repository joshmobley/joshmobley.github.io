define(["require","exports"],function(t,o){"use strict";function e(t){t.css("color","#aaa").val("Write your message here...")}function n(t){t.val("").css("color","#111")}function a(){$("textarea").on("focus",function(){n($(this))}).on("focusout",function(){""==$(this).val()&&e($(this))})}function r(){$('#contact-form [type="submit"]').on("click",function(t){t.preventDefault();var o={};$("form input, form textarea").each(function(){var t=$(this).attr("name"),e=$(this).val();o[t]=e}),$.ajax({url:"https://formspree.io/jmob1986@gmail.com",method:"POST",data:o,dataType:"json"}).done(function(t){var o=$("form").height(),n=$(".form-content").html();$("form").css("height",o),$(".form-content").animate({opacity:"0"},function(){var t=$(this);$(this).html("<h2>Thanks!</h2><p>I&rsquo;ll get back to you soon.</p>").animate({opacity:"1"}),setTimeout(function(){console.log("timeout"),t.animate({opacity:"0"},function(){$(this).html(n).animate({opacity:"1"}),e($("form textarea")),a()})},5e3)})}).fail(function(){0==$("form .error-msg").length?($("form h2").after('<p class="error-msg" style="display: none;">Sorry, but something went wrong. Please try again.</p>'),$("form .error-msg").fadeIn()):$("form .error-msg").fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250)})})}o.__esModule=!0,o.formStyles=a,o.formSubmit=r});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm1zLm1vZHVsZS50cyJdLCJuYW1lcyI6WyJ0ZXh0YXJlYVJlc3R5bGUiLCJ0ZXh0YXJlYSIsImNzcyIsInZhbCIsInRleHRhcmVhU3R5bGUiLCJmb3JtU3R5bGVzIiwiJCIsIm9uIiwidGhpcyIsImZvcm1TdWJtaXQiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwibWVzc2FnZURhdGEiLCJlYWNoIiwibmFtZSIsImF0dHIiLCJ2YWx1ZSIsImFqYXgiLCJ1cmwiLCJtZXRob2QiLCJkYXRhIiwiZGF0YVR5cGUiLCJkb25lIiwiZm9ybUhlaWdodCIsImhlaWdodCIsImZvcm1IVE1MIiwiaHRtbCIsImFuaW1hdGUiLCJvcGFjaXR5IiwiY29udGVudCIsInNldFRpbWVvdXQiLCJjb25zb2xlIiwibG9nIiwiZmFpbCIsImxlbmd0aCIsImFmdGVyIiwiZmFkZUluIiwiZmFkZU91dCIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJ1REFJQSxTQUFBQSxHQUF5QkMsR0FDckJBLEVBQVNDLElBQUksUUFBUyxRQUFRQyxJQUFJLDhCQUd0QyxRQUFBQyxHQUF1QkgsR0FDbkJBLEVBQVNFLElBQUksSUFBSUQsSUFBSSxRQUFTLFFBR2xDLFFBQUFHLEtBQ1FDLEVBQUUsWUFDR0MsR0FBSSxRQUFTLFdBQ1ZILEVBQWVFLEVBQUVFLFNBRXBCRCxHQUFJLFdBQVksV0FDUSxJQUFqQkQsRUFBRUUsTUFBTUwsT0FBZUgsRUFBaUJNLEVBQUVFLFNBSTlELFFBQUFDLEtBQ0lILEVBQUUsaUNBQWlDQyxHQUFHLFFBQVMsU0FBU0csR0FDcERBLEVBQU1DLGdCQUNOLElBQUlDLEtBQ0pOLEdBQUUsNkJBQTZCTyxLQUFNLFdBQ2pDLEdBQUlDLEdBQWlCUixFQUFFRSxNQUFNTyxLQUFLLFFBQzlCQyxFQUFpQlYsRUFBRUUsTUFBTUwsS0FDN0JTLEdBQVlFLEdBQVFFLElBRXhCVixFQUFFVyxNQUNFQyxJQUFLLDBDQUNMQyxPQUFRLE9BQ1JDLEtBQU1SLEVBQ05TLFNBQVUsU0FDWEMsS0FBTSxTQUFTRixHQUNkLEdBQUlHLEdBQXNCakIsRUFBRSxRQUFRa0IsU0FDaENDLEVBQW1CbkIsRUFBRSxpQkFBaUJvQixNQUMxQ3BCLEdBQUUsUUFBUUosSUFBSyxTQUFVcUIsR0FDekJqQixFQUFFLGlCQUFpQnFCLFNBQVVDLFFBQVcsS0FDcEMsV0FDSSxHQUFJQyxHQUFVdkIsRUFBRUUsS0FDaEJGLEdBQUVFLE1BQ0drQixLQUFLLDJEQUNMQyxTQUFVQyxRQUFXLE1BQzFCRSxXQUFZLFdBQ1JDLFFBQVFDLElBQUksV0FDWkgsRUFDS0YsU0FBVUMsUUFBVyxLQUNsQixXQUNJdEIsRUFBRUUsTUFDR2tCLEtBQUtELEdBQ0xFLFNBQVVDLFFBQVcsTUFDMUI1QixFQUFnQk0sRUFBRSxrQkFDbEJELE9BRWIsU0FHWjRCLEtBQU0sV0FDOEIsR0FBL0IzQixFQUFFLG1CQUFtQjRCLFFBQ3JCNUIsRUFBRSxXQUNHNkIsTUFBTSxzR0FDWDdCLEVBQUUsbUJBQW1COEIsVUFFckI5QixFQUFFLG1CQUNHK0IsUUFBUSxLQUNSRCxPQUFPLEtBQ1BDLFFBQVEsS0FDUkQsT0FBTyxLQUNQQyxRQUFRLEtBQ1JELE9BQU8seUJBNUQ1QkUsRUFBQWpDLFdBQUFBLEVBVUFpQyxFQUFBN0IsV0FBQUEiLCJmaWxlIjoiZm9ybXMubW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW50ZXJmYWNlIE1lc3NhZ2VEYXRhIHtcbiAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG59XG5cbmZ1bmN0aW9uIHRleHRhcmVhUmVzdHlsZSh0ZXh0YXJlYTpKUXVlcnkpe1xuICAgIHRleHRhcmVhLmNzcygnY29sb3InLCAnI2FhYScpLnZhbCgnV3JpdGUgeW91ciBtZXNzYWdlIGhlcmUuLi4nKTtcbn1cblxuZnVuY3Rpb24gdGV4dGFyZWFTdHlsZSh0ZXh0YXJlYTpKUXVlcnkpe1xuICAgIHRleHRhcmVhLnZhbCgnJykuY3NzKCdjb2xvcicsICcjMTExJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtU3R5bGVzKCl7XG4gICAgICAgICQoJ3RleHRhcmVhJylcbiAgICAgICAgICAgIC5vbiggJ2ZvY3VzJywgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICB0ZXh0YXJlYVN0eWxlKCAkKHRoaXMpIClcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAub24oICdmb2N1c291dCcsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgaWYoICQodGhpcykudmFsKCkgPT0gJycgKXsgdGV4dGFyZWFSZXN0eWxlKCAkKHRoaXMpICk7IH0gXG4gICAgICAgICAgICB9KTtcbn0gICBcbiAgICBcbmV4cG9ydCBmdW5jdGlvbiBmb3JtU3VibWl0KCl7XG4gICAgJCgnI2NvbnRhY3QtZm9ybSBbdHlwZT1cInN1Ym1pdFwiXScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KXtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgbGV0IG1lc3NhZ2VEYXRhIDogTWVzc2FnZURhdGEgPSB7fTtcbiAgICAgICAgJCgnZm9ybSBpbnB1dCwgZm9ybSB0ZXh0YXJlYScpLmVhY2goIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBsZXQgbmFtZSAgOiBzdHJpbmcgPSAkKHRoaXMpLmF0dHIoJ25hbWUnKTtcbiAgICAgICAgICAgIGxldCB2YWx1ZSA6IHN0cmluZyA9ICQodGhpcykudmFsKCk7XG4gICAgICAgICAgICBtZXNzYWdlRGF0YVtuYW1lXSA9IHZhbHVlOyBcbiAgICAgICAgfSk7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IFwiaHR0cHM6Ly9mb3Jtc3ByZWUuaW8vam1vYjE5ODZAZ21haWwuY29tXCIsIFxuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IG1lc3NhZ2VEYXRhLFxuICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiXG4gICAgICAgIH0pLmRvbmUoIGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAgICAgbGV0IGZvcm1IZWlnaHQgOiBudW1iZXIgPSAkKCdmb3JtJykuaGVpZ2h0KCk7XG4gICAgICAgICAgICBsZXQgZm9ybUhUTUw6IHN0cmluZyA9ICQoJy5mb3JtLWNvbnRlbnQnKS5odG1sKCk7XG4gICAgICAgICAgICAkKCdmb3JtJykuY3NzKCAnaGVpZ2h0JywgZm9ybUhlaWdodCApO1xuICAgICAgICAgICAgJCgnLmZvcm0tY29udGVudCcpLmFuaW1hdGUoeyAnb3BhY2l0eSc6ICcwJyB9LCBcbiAgICAgICAgICAgICAgICBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgY29udGVudCA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5odG1sKCc8aDI+VGhhbmtzITwvaDI+PHA+SSZyc3F1bztsbCBnZXQgYmFjayB0byB5b3Ugc29vbi48L3A+JylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hbmltYXRlKHsgJ29wYWNpdHknOiAnMScgfSk7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygndGltZW91dCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5hbmltYXRlKHsgJ29wYWNpdHknOiAnMCcgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuaHRtbChmb3JtSFRNTClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYW5pbWF0ZSh7ICdvcGFjaXR5JzogJzEnIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dGFyZWFSZXN0eWxlKCQoJ2Zvcm0gdGV4dGFyZWEnKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtU3R5bGVzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSwgNTAwMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSkuZmFpbCggZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIGlmKCAkKCdmb3JtIC5lcnJvci1tc2cnKS5sZW5ndGggPT0gMCApe1xuICAgICAgICAgICAgICAgICQoJ2Zvcm0gaDInKVxuICAgICAgICAgICAgICAgICAgICAuYWZ0ZXIoJzxwIGNsYXNzPVwiZXJyb3ItbXNnXCIgc3R5bGU9XCJkaXNwbGF5OiBub25lO1wiPlNvcnJ5LCBidXQgc29tZXRoaW5nIHdlbnQgd3JvbmcuIFBsZWFzZSB0cnkgYWdhaW4uPC9wPicpO1xuICAgICAgICAgICAgICAgICQoJ2Zvcm0gLmVycm9yLW1zZycpLmZhZGVJbigpO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgJCgnZm9ybSAuZXJyb3ItbXNnJylcbiAgICAgICAgICAgICAgICAgICAgLmZhZGVPdXQoMjUwKVxuICAgICAgICAgICAgICAgICAgICAuZmFkZUluKDI1MClcbiAgICAgICAgICAgICAgICAgICAgLmZhZGVPdXQoMjUwKVxuICAgICAgICAgICAgICAgICAgICAuZmFkZUluKDI1MClcbiAgICAgICAgICAgICAgICAgICAgLmZhZGVPdXQoMjUwKVxuICAgICAgICAgICAgICAgICAgICAuZmFkZUluKDI1MCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSJdfQ==
